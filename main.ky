let myTrue = true;
let myFalse = false;

let notTrue = !true;
let notFalse = !false;
let notMyTrue = !myTrue;
let notMyFalse = !myFalse;

let orResult = myTrue || myFalse;
let andResult = myTrue && myFalse;

// tests for number operations
let numVal1 = 1;
let numVal2 = 1.01;

let x = 10;
let y = 5;

// basic arithmetic
let sum = x + y;
let difference = x - y;
let product = x * y;
let quotient = x / y;
let remainder = x % y;

// compound expressions
let compound1 = 1 + 2 * 3 + 4;
let compound2 = 1 + 2 - 3 * 4 / 5 % 6;

// comparison
let eqdT = 0 == 0;
let eqdF = 0 == 1;
let neqT = 0 != 1;
let neqF = 0 != 0;
let neqdT = 0 != 1;
let neqdF = 0 != 0;

// type
let numType1 = typeof numVal1;
let numType2 = typeof numVal2;

let ltT = 0 < 1;
let ltF1 = 0 < 0;
let ltF2 = 1 < 0;
let lteT1 = 0 <= 1;
let lteT2 = 1 <= 1;
let lteF = 1 <= 0;

let gteT1 = 1 >= 0;
let gteT2 = 1 >= 1;
let gteF = 0 >= 1;

let eqT = 0 == 0;
let eqF = 0 == 1;

// tests for number operations
let numVal1 = 1;
let numVal2 = 1.01;

let x = 10;
let y = 5;

// basic arithmetic
let sum = x + y;
let difference = x - y;
let product = x * y;
let quotient = x / y;
let remainder = x % y;

// compound expressions
let compound1 = 1 + 2 * 3 + 4;
let compound2 = 1 + 2 - 3 * 4 / 5 % 6;

// comparison
let ltT = 0 < 1;
let ltF1 = 0 < 0;
let ltF2 = 1 < 0;
let lteT1 = 0 <= 1;
let lteT2 = 1 <= 1;
let lteF = 1 <= 0;

let gtT = 1 > 0;
let gtF1 = 1 > 1;
let gtF2 = 0 > 1;
let gteT1 = 1 >= 0;
let gteT2 = 1 >= 1;
let gteF = 0 >= 1;

let eqT = 0 == 0;
let eqF = 0 == 1;
let neqT = 0 != 1;
let neqF = 0 != 0;

// type
let numType1 = typeof numVal1;
let numType2 = typeof numVal2;


let noParamFn = () => {
    return;
};

let noParamFnResult = noParamFn();

let oneParamFn = (Num x,) => {
    let result = x * 2;
    return result;
};

let oneParamFnResult = oneParamFn(3);

let testDeMorgans = (Bool a, Bool b,) => {
    return (!(a || b) == (!a && !b)) && (!(a && b) == (!a || !b));
};

let dmTT = testDeMorgans(true, true);
let dmTF = testDeMorgans(true, false);
let dmFF = testDeMorgans(false, false);
let dmFT = testDeMorgans(false, true);

let myStruct = {
    x: 1,
    y: 1.01,
};

let structType = typeof myStruct;

let structMember1 = myStruct.x;
let structMember2 = myStruct.y;

let myStruct2 = {
    y: 2.01,
    x: 2,
};

let codeBlock = {
	2;

	x + y;
};